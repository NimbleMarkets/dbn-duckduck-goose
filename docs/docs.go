// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "file:///dev/null",
        "contact": {
            "name": "Neomantra Corp",
            "url": "https://nimble.markets",
            "email": "nosupport@nimble.markets"
        },
        "license": {
            "name": "MIT",
            "url": "https://mit-license.org"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/last-trades/{dataset}/{ticker}": {
            "get": {
                "description": "Returns the last N trades by dataset and ticker.",
                "produces": [
                    "application/json"
                ],
                "summary": "GET last N trades by market and ticker",
                "operationId": "GetLastTradesByDatasetAndTicker",
                "parameters": [
                    {
                        "type": "string",
                        "example": "DBEQ.BASIC",
                        "description": "DataBento dataset",
                        "name": "dataset",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "AAPL",
                        "description": "symbol to query",
                        "name": "ticker",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "(optional) number of trades to return - default is 25",
                        "name": "count",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "array of TradeTicks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sdk.TradeTick"
                            }
                        }
                    },
                    "404": {
                        "description": "dataset not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "sdk.TradeTick": {
            "type": "object",
            "properties": {
                "mkt": {
                    "description": "Market of the trade",
                    "type": "string",
                    "example": "Q"
                },
                "ns": {
                    "description": "Nanoseconds portion of the event timestamp",
                    "type": "integer",
                    "example": 123456
                },
                "pub": {
                    "description": "DataBento Publisher ID",
                    "type": "integer",
                    "example": 1
                },
                "px": {
                    "description": "Trade price",
                    "type": "number",
                    "example": 214.21
                },
                "sym": {
                    "description": "Ticker of the trade",
                    "type": "string",
                    "example": "AAPL"
                },
                "sz": {
                    "description": "Trade size/volume",
                    "type": "integer",
                    "example": 100
                },
                "ts": {
                    "description": "Trade event timestamp as seconds from the epoch",
                    "type": "string",
                    "example": "1713644400"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "api.example.com",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "dbn-duckduck-goose",
	Description:      "DuckDB-backed DBN Golang web service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
